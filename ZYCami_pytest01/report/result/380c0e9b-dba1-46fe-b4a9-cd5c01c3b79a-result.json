{"name": "编辑、删除", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: Coordinate [x=936.0, y=2316.0] is outside of element rect: [0,0][2328,1128]", "trace": "self = <TestCase.test_01_test_camera06.TestCamera06 object at 0x00000163CB29F988>\nget_driver = <appium.webdriver.webdriver.WebDriver (session=\"23624006-f98e-4fa8-9d26-a11adc0c8410\")>\nvideo = {'name': '图片信息关闭', 'type': 'id', 'value': 'close'}\n\n    @allure.story(\"视频\")\n    @allure.title(\"编辑、删除\")\n    @pytest.mark.parametrize(\"video\", video_)\n    def test_camera_photo_video(self, get_driver, video):\n        self.camera = CameraPage(get_driver)\n>       self.camera.is_click_(video)\n\nTestCase\\test_01_test_camera06.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\camerapage.py:142: in is_click_\n    self.blank_03()     #编辑\npage\\webpage.py:322: in blank_03\n    self.driver.tap([(936, 2316)])\nD:\\Program Files (x86)\\Python\\lib\\site-packages\\appium\\webdriver\\extensions\\action_helpers.py:96: in tap\n    action.perform()\nD:\\Program Files (x86)\\Python\\lib\\site-packages\\appium\\webdriver\\common\\touch_action.py:149: in perform\n    self._driver.execute(Command.TOUCH_ACTION, params)\nD:\\Program Files (x86)\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\nD:\\Program Files (x86)\\Python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:31: in check_response\n    raise wde\nD:\\Program Files (x86)\\Python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x00000163CAD35FC8>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid argument\",\"message\":\"Coordinate [x=936.0, y=2316.0] is outside of...ctory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\\\\n\\\\tat java.lang.Thread.run(Thread.java:929)\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidArgumentException: Message: Coordinate [x=936.0, y=2316.0] is outside of element rect: [0,0][2328,1128]\n\nD:\\Program Files (x86)\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: InvalidArgumentException"}, "steps": [{"name": "前置条件", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidArgumentException: Message: Coordinate [x=936.0, y=2316.0] is outside of element rect: [0,0][2328,1128]\n\n", "trace": "  File \"D:\\Program Files (x86)\\Python\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"D:\\ZYCami_pytest01\\page_object\\camerapage.py\", line 142, in is_click_\n    self.blank_03()     #编辑\n  File \"D:\\ZYCami_pytest01\\page\\webpage.py\", line 322, in blank_03\n    self.driver.tap([(936, 2316)])\n  File \"D:\\Program Files (x86)\\Python\\lib\\site-packages\\appium\\webdriver\\extensions\\action_helpers.py\", line 96, in tap\n    action.perform()\n  File \"D:\\Program Files (x86)\\Python\\lib\\site-packages\\appium\\webdriver\\common\\touch_action.py\", line 149, in perform\n    self._driver.execute(Command.TOUCH_ACTION, params)\n  File \"D:\\Program Files (x86)\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Program Files (x86)\\Python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 31, in check_response\n    raise wde\n  File \"D:\\Program Files (x86)\\Python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 26, in check_response\n    super().check_response(response)\n  File \"D:\\Program Files (x86)\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "{'name': '图片信息关闭', 'type': 'id', 'value': 'close'}"}], "start": 1609832591071, "stop": 1609832593365}], "attachments": [{"name": "测试失败截图20210105154313", "source": "1ba47a3d-29ca-481b-ac5c-bbbb8e9f72e0-attachment.png", "type": "image/png"}], "parameters": [{"name": "video", "value": "{'name': '图片信息关闭', 'type': 'id', 'value': 'close'}"}], "start": 1609832591071, "stop": 1609832593366, "uuid": "1178c4ca-3139-43fd-95bd-8d58d8e54bfb", "historyId": "4b8d4cb48133e0ace553f730d5df316c", "testCaseId": "176c427bf5e1a7c955d6ffe1ed1c344b", "fullName": "TestCase.test_01_test_camera06.TestCamera06#test_camera_photo_video", "labels": [{"name": "story", "value": "视频"}, {"name": "feature", "value": "相册"}, {"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_01_test_camera06"}, {"name": "subSuite", "value": "TestCamera06"}, {"name": "host", "value": "DESKTOP-4KG9PK6"}, {"name": "thread", "value": "38132-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_01_test_camera06"}]}